{% block content %}

    {%- for group_alias, collections in groups %}
        <div class="sm-tab-container" id="{{ group_alias }}">
            {% if showGroupTitle and collections|first.groupTitle %}
                <h4 class="sm-groupTitle">{{ collections|first.groupTitle }}</h4>
            {% endif %}
            {% set sessionAlias = session[group_alias] ?? null %}

            <div class="tab-nav">
                {% for alias, collection in collections %}
                    {% set identifier = (loop.index - 1) ~ '-' ~ alias ~ '-' ~ id %}
                    {% set isSelected = sessionAlias is not defined and loop.first or sessionAlias == identifier %}
                    {% set buttonAttributes = attrs()
                        .set('type', 'button')
                        .addClass('tab-btn')
                        .set('data-id', id)
                        .set('data-alias', group_alias)
                        .set('data-identifier', identifier)
                        .set('aria-expanded', isSelected ? 'true' : 'false')
                        .set('data-action', 'focus->contao--scroll-offset#store')
                    %}
                    <button{{ buttonAttributes }}>{{ collection.label }}</button>
                {% endfor %}
            </div>
            <div class="tab-content-container">
                {% for alias, collection in collections %}
                    {% set identifier =  (loop.index - 1) ~ '-' ~ alias ~ '-' ~ id %}
                    {% set isSelected = sessionAlias is not defined and loop.first or sessionAlias == identifier %}

                    <div id="{{ identifier }}" class="tab-content{{ isSelected ? ' active' : '' }}">
                        {% if collection.desc is not empty %}
                            <div class="long desc">{{ collection.desc|nl2br }}</div>
                        {% endif %}

                        {% for html in collection.fields %}
                            {{ html|raw }}
                        {% endfor %}
                    </div>
                {% endfor %}
            </div>
        </div>
    {% endfor -%}

{% endblock %}

{% block script %}
    <script>
      (() => {
        const tabContainers = document.querySelectorAll('.sm-tab-container');

        const toggleActive = (node, match) => {
          node.classList.toggle('active', node.id === match);
        };

        const sendSectionRequest = (id, group_alias, identifier) => {
          fetch(window.location.href, {
            method: 'POST',
            headers: {
              'X-Requested-With': 'XMLHttpRequest'
            },
            body: new URLSearchParams({
              action: 'selectStyleManagerSection',
              id: id,
              groupAlias: group_alias,
              identifier: identifier,
              REQUEST_TOKEN: '{{ requestToken }}'
            })
          })
        }

        tabContainers?.forEach(tabElement => {
          const tabNavs = tabElement.querySelectorAll('.tab-btn');
          const tabContents = tabElement.querySelectorAll('.tab-content');

          const toggleTab = btn => {
            const match = btn.dataset.identifier;
            tabContents?.forEach(node => toggleActive(node, match));
            tabNavs?.forEach(node => toggleActive(node, match));
          };

          tabNavs?.forEach(btn => {
            btn.onclick = () => {
              tabNavs?.forEach(i => { if (btn !== i) { i.ariaExpanded = 'false' }});
              tabNavs?.forEach(i => { if (btn !== i) { i.ariaExpanded = 'false' }});

              toggleTab(btn);
              sendSectionRequest(btn.dataset.id, btn.dataset.alias, btn.dataset.identifier);
              btn.ariaExpanded = 'true';
            };
          });
        });
      })();
    </script>
{% endblock %}
